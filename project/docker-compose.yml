services:
  auth-service:
    build: 
      context: ../auth-service
      dockerfile: ../auth-service/auth-service.dockerfile
    # ports:
    #   - "8082:80"
    environment:
      - DSN= host=postgres user=postgres password=mysecret database=auth sslmode=disable timezone=UTC connect_timeout=5
      - ENV=Development
      - JWT_Secret=randomabcios12
      - AMQP-URL=amqp://guest:guest@rabbitmq
      - AUTH-EXCHANGE="auth.events.user"
    depends_on:
      - postgres
      - rabbitmq
    restart: always
  
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecret
      - POSTGRES_DB=auth
    volumes:
      - ./db-data/auth-data:/var/lib/postgresql/data

  user-service:
    build:
      context: ../user-service
      dockerfile: ../user-service/user-service.dockerfile
    
    ports:
      - "8083:80"
    depends_on:
      - postgres-user
      - rabbitmq
    restart: always
    environment:
      - DSN= host=postgres-user user=postgres database=users password=myuser sslmode=disable timezone=UTC connect_timeout=5
      - ENV=Development
      - AMQP-URL=amqp://guest:guest@rabbitmq
      - AUTH-EXCHANGE="auth.events.user"


  
  postgres-user:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users
      - POSTGRES_PASSWORD=myuser
    volumes:
      - ./db-data/user-data/:/var/lib/postgresql/data
  
  api-gateway:
    build: 
      context: ../api-gateway
      dockerfile: ../api-gateway/api-gateway.dockerfile
    ports:
      - "8081:80"
    
    environment:
      - ENV=Development
      - JWT_Secret=randomabcios12
    restart: always
  
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    volumes:
      - ./db-data/rabbitmq-data/:/var/lib/rabbitmq
    restart: always
    
  
    
      